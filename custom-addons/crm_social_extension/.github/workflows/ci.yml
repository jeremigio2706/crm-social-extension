name: CRM Social Extension CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    strategy:
      matrix:
        odoo-version: [18.0, 17.0, 16.0]
        python-version: [3.11, 3.10]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client libxml2-dev libxslt1-dev libldap2-dev libsasl2-dev \
                                  libtiff5-dev libjpeg8-dev libopenjp2-7-dev zlib1g-dev libfreetype6-dev \
                                  liblcms2-dev libwebp-dev libharfbuzz-dev libfribidi-dev libxcb1-dev

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install coverage pytest-odoo

      - name: Download and setup Odoo ${{ matrix.odoo-version }}
        run: |
          git clone --depth 1 --branch ${{ matrix.odoo-version }} https://github.com/odoo/odoo.git
          pip install -r odoo/requirements.txt

      - name: Create Odoo configuration
        run: |
          cat > odoo.conf << EOF
          [options]
          addons_path = odoo/addons,odoo/odoo/addons,.
          admin_passwd = admin
          db_host = localhost
          db_port = 5432
          db_user = postgres
          db_password = postgres
          EOF

      - name: Initialize database
        run: |
          python odoo/odoo-bin -c odoo.conf -d test_db --init=base --stop-after-init

      - name: Run tests with coverage
        run: |
          coverage run --source=crm_social_extension odoo/odoo-bin -c odoo.conf -d test_db \
            --test-enable --test-file=crm_social_extension/tests/ --stop-after-init

      - name: Generate coverage report
        run: |
          coverage report
          coverage xml
          coverage html

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Archive coverage results
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-${{ matrix.odoo-version }}-py${{ matrix.python-version }}
          path: htmlcov/

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pylint black isort

      - name: Run Black
        run: black --check --diff crm_social_extension/

      - name: Run isort
        run: isort --check-only --diff crm_social_extension/

      - name: Run flake8
        run: flake8 crm_social_extension/

      - name: Run pylint
        run: pylint crm_social_extension/

  security:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install security tools
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety

      - name: Run Bandit security scan
        run: bandit -r crm_social_extension/

      - name: Run Safety check
        run: safety check

  build:
    needs: [test, lint, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Create module package
        run: |
          zip -r crm_social_extension.zip crm_social_extension/ \
            --exclude="crm_social_extension/__pycache__/*" \
            --exclude="crm_social_extension/*/__pycache__/*" \
            --exclude="crm_social_extension/*/*/__pycache__/*" \
            --exclude="*.pyc"

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: crm_social_extension
          path: crm_social_extension.zip

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add your deployment script here

      - name: Create release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
